{# CONTAINERLABS configuration rendering #}
---
name: {{ containerlab_labname }}

prefix: {{ containerlab_prefix }}

{# Run through all node names and divide them to the containerlab hosts #}
{%- set distributed_nodes = {} -%}
{%- for docker_node in groups['CONTAINERLAB'] -%}
{%-     set docker_host_counter = loop -%}
{%-     set tmp_node_list = [] -%}
{%-     for fabric_switch in avd_nodes_all.nodes | arista.avd.natural_sort -%}
{%-         if loop.index % (groups['CONTAINERLAB'] | length) == docker_host_counter.index-1 -%}
{%-             do tmp_node_list.append(fabric_switch) -%}
{%-         endif -%} 
{%-     endfor -%}  
{%-     do distributed_nodes.update({ docker_node:tmp_node_list }) -%}
{%- endfor -%}  
{%- set ns = namespace(non_avd_node_counter = 0) -%} 
{% for fabric_switch in distributed_nodes[inventory_hostname] | arista.avd.natural_sort %}
{# Generate topology nodes #}
{%     set fabric_switch_facts = hostvars[fabric_switch] | arista.avd.default %}
{%     if fabric_switch_facts is arista.avd.defined(fail_action='warning',var_name='Switch Facts for ' ~ fabric_switch) %}
{# For First loop generate mgmt network and nodes header #}
{%         if loop.first %}
mgmt:
  network: {{ containerlab_mgmt_network_name }}
{# We require that all devices are in the same management subnet #}
{%             if containerlab_mgmt_network is arista.avd.defined %}
  ipv4-subnet: {{ containerlab_mgmt_network | ansible.utils.ipaddr('subnet') }}
{%             else %}
{# If containerlab_mgmt_network is not defined use the management ip of the first node to determine the mgmt network #}
{%                 if fabric_switch_facts.management_interfaces is arista.avd.defined %}
{%                     set ns = namespace(first_entry=true) -%}   
{%                     for mgmt_int in fabric_switch_facts.management_interfaces if ns.first_entry %}
{%                         if mgmt_int.type is arista.avd.defined and mgmt_int.type == 'oob' %}
  ipv4-subnet: {{ mgmt_int.ip_address | ansible.utils.ipaddr('subnet') }}
{%                             set ns.first_entry=false -%}
{%                         endif %}
{%                     endfor %}  
{%                 endif %}
{%             endif %}
{# NODES definition #}
topology:
  nodes:
{%         endif %}
    {{ fabric_switch }}:
      image: {{ containerlab_ceos_version }}
{%         if fabric_switch_facts.management_interfaces is arista.avd.defined %}
{%             set ns = namespace(first_entry=true) -%}   
{%             for mgmt_int in fabric_switch_facts.management_interfaces if ns.first_entry %}
{%                 if mgmt_int.type is arista.avd.defined and mgmt_int.type == 'oob' %}
      mgmt-ipv4: {{ mgmt_int.ip_address | ansible.utils.ipaddr('address') -}}
{%                     set ns.first_entry=false -%}
{%                 endif %}
{%             endfor %}  
{%         endif %}
      kind: ceos
      startup-config: {{ inventory_hostname }}_{{ eos_config_dir_name }}/{{ fabric_switch }}.cfg
{%         if containerlab_enforce_startup_config %}
      enforce-startup-config: true
{%         endif %}
{%         if containerlab_deploy_startup_batches is defined %}
{%           if loop.index > (containerlab_deploy_startup_batches | int)  %}
      startup-delay: {{ (loop.index // (containerlab_deploy_startup_batches | int )) * 300 }}
{%           endif %}
{%         endif %}
{%         if (containerlab_custom_interface_mapping) or (containerlab_onboard_to_cvp_token is defined) %}
      binds:
{%           if containerlab_custom_interface_mapping %}
        - {{ inventory_hostname }}_{{ containerlab_mapping_dir_name }}/{{ fabric_switch }}.json:/mnt/flash/EosIntfMapping.json:ro
{%           endif %}
{%           if containerlab_onboard_to_cvp_token is defined %}
        - {{ inventory_hostname }}_{{ containerlab_config_dir_name }}/containerlab_onboarding_token:/mnt/flash/token:ro
{%           endif %}
{%         endif %}
{%         if fabric_switch_facts.containerlab is arista.avd.defined %}
      {{ fabric_switch_facts.containerlab | to_nice_yaml(indent=2, sort_keys=False) | indent(6) -}}
{%         endif %}
{%     else %}
{%       if containerlab_include_non_avd_nodes %}
    {{ fabric_switch }}:
      image: {{ containerlab_ceos_version }}
      mgmt-ipv4: {{ containerlab_client_ip_pool[ns.non_avd_node_counter] | ansible.utils.ipaddr('address') -}}
{%      set ns.non_avd_node_counter = ns.non_avd_node_counter + 1 %}

      kind: ceos
      startup-config: {{ inventory_hostname }}_{{ eos_config_dir_name }}/{{ fabric_switch }}.cfg
{%         if containerlab_onboard_to_cvp_token is defined %}
      binds:
        - {{ inventory_hostname }}_{{ containerlab_config_dir_name }}/containerlab_onboarding_token:/mnt/flash/token:ro
{%         endif %}
      exec:
        - FastCli -p 15 -c $'configure\n username cvpadmin privilege 15 role network-admin secret arista123'
{%       endif %}
{%     endif %}

{% endfor %}

{# LINKS definition #}
  links:
{% for connection in connections_per_host[inventory_hostname]['local_con'] %}
    - endpoints: ["{{ (connection.keys() | list)[0] }}:{{ connection[(connection.keys() | list)[0]].split('.')[0]  }}", "{{ (connection.keys() | list)[1] }}:{{ connection[(connection.keys() | list)[1]].split('.')[0] }}"]
{% endfor %}
{% for connection in connections_per_host[inventory_hostname]['local_vx_con'] %}
    - endpoints: ["{{ (connection.keys() | list)[0] }}:{{ connection[(connection.keys() | list)[0]].split('.')[0] }}", "{{ (connection.keys() | list)[1] }}-{{ connection[(connection.keys() | list)[1]].split('.')[0] }}"]
{% endfor %}
